import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import Head from "next/head";
import { api } from "~/utils/api";

function TodoDetails() {
  const router = useRouter();

  const todoId = router.query.todoId as string;
  const content = api.todo.getTodo.useQuery({ id: todoId }).data
    ?.content as string;

  const updateTodo = api.todo.updateTodo.useMutation();

  const [todo, setTodo] = useState("");

  useEffect(() => {
    setTodo(content);
  }, [content]);

  async function handleUpdateTodo(e: React.FormEvent, id: string) {
    e.preventDefault();
    await updateTodo.mutateAsync({ id, content: todo });
    router.push("/").catch(console.error);
  }

  return (
    <>
      <Head>
        <title>Your Cool TODO App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center gap-10 bg-gradient-to-b from-[#2e026d] to-[#15162c] py-40">
        <h1 className="text-5xl font-extrabold tracking-tight text-white">
          Update your TODO
        </h1>
        <form
          className="jus flex items-center justify-center gap-4"
          onSubmit={(e) => {
            handleUpdateTodo(e, todoId).catch(console.error);
          }}
        >
          <input
            className="w-full p-2"
            value={todo}
            onChange={(e) => {
              setTodo(e.currentTarget.value);
            }}
          />
          <button
            className="rounded-full bg-white p-2 text-2xl hover:bg-gray-200"
            type="submit"
          >
            Go!
          </button>
        </form>

        <button
          className="rounded-full bg-white px-4 py-2 text-2xl hover:bg-gray-200"
          type="button"
          onClick={() => router.back()}
        >
          Back
        </button>

        {updateTodo.isLoading && <span className="text-white">Loading...</span>}
      </main>
    </>
  );
}
export default TodoDetails;
