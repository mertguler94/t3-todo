import { type NextPage } from "next";
import Head from "next/head";
import { api } from "~/utils/api";
import { useState } from "react";
import { useRouter } from "next/router";

const Home: NextPage = () => {
  const todos = api.todo.getAllTodos.useQuery();
  const submitTodo = api.todo.createTodo.useMutation();
  const deleteTodo = api.todo.deleteTodo.useMutation();

  const [content, setContent] = useState("");

  const router = useRouter();

  function handleSubmitTodo(e: React.FormEvent<HTMLFormElement>) {
    e.preventDefault();
    submitTodo
      .mutateAsync({ content })
      .then(() => todos.refetch())
      .catch(console.error);
    setContent("");
  }

  function handleDeleteTodo(id: string) {
    deleteTodo
      .mutateAsync({ id })
      .then(() => todos.refetch())
      .catch(console.error);
  }

  return (
    <>
      <Head>
        <title>Your Cool TODO App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-between bg-gradient-to-b from-[#2e026d] to-[#15162c] py-40">
        <h1 className="text-5xl font-extrabold tracking-tight text-white">
          Your Cool TODO App!
        </h1>
        <div>
          <ul className="flex flex-col gap-4">
            {todos.data?.map((todo) => (
              <div
                key={todo.id}
                className="flex items-center justify-center gap-3"
              >
                <li className="text-white">{todo.content}</li>
                <button
                  type="button"
                  className="rounded-lg bg-blue-400 p-2 text-white"
                  onClick={(): any => router.push(`/${todo.id}`)}
                >
                  UPDATE
                </button>
                <button
                  type="button"
                  className="rounded-lg bg-red-400 p-2 text-white"
                  onClick={() => handleDeleteTodo(todo.id)}
                >
                  DELETE
                </button>
              </div>
            ))}
          </ul>
        </div>
        <form
          className="flex items-center justify-center gap-4"
          onSubmit={(e) => handleSubmitTodo(e)}
        >
          <label className="text-white" htmlFor="todo">
            Enter your idea/todo:{" "}
          </label>
          <input
            id="todo"
            type="text"
            className="p-2"
            value={content}
            onChange={(e) => setContent(e.currentTarget.value)}
          />
          <button
            className="h-10 w-10 rounded-full bg-white text-2xl"
            type="submit"
          >
            +
          </button>
        </form>
      </main>
    </>
  );
};

export default Home;
